<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>sk.spot</groupId>
  <artifactId>sandbox-dropwizard</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer />
                <transformer>
                  <mainClass>sk.spot.sandbox.dropwizard.SandboxApplication</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.14.2</version>
        <configuration>
          <useColor>true</useColor>
          <images>
            <image>
              <alias>${project.artifactId}</alias>
              <name>${docker.repository.name}:${project.version}</name>
              <build>
                <from>java:8-jre</from>
                <maintainer>marek</maintainer>
                <assembly>
                  <descriptor>docker-assembly.xml</descriptor>
                </assembly>
                <ports>
                  <port>8080</port>
                  <port>8081</port>
                </ports>
                <cmd>
                  <shell>java -DdbHost=$DB_PORT_27017_TCP_ADDR \
										-DdbPort=$DB_PORT_27017_TCP_PORT -jar \
										/maven/${project.build.finalName}.jar server \
										/maven/config.yml</shell>
                </cmd>
              </build>
              <run>
                <namingStrategy>alias</namingStrategy>
                <ports>
                  <port>${web.port}:8080</port>
                  <port>${admin.port}:8081</port>
                </ports>
                <volumes>
                  <bind>
                    <volume>/var/log:/log</volume>
                  </bind>
                </volumes>
                <wait>
                  <url>http://${docker.host.address}:${admin.port}/ping</url>
                  <time>30000</time>
                </wait>
                <log>
                  <prefix>${project.artifactId}</prefix>
                  <color>cyan</color>
                </log>
                <links>
                  <link>mongodb:db</link>
                </links>
              </run>
            </image>
            <image>
              <alias>mongodb</alias>
              <name>mongo:3.2</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <ports>
                  <port>27017:27017</port>
                </ports>
                <cmd>--smallfiles</cmd>
                <wait>
                  <log>waiting for connections on port</log>
                  <time>30000</time>
                </wait>
                <log>
                  <prefix>MongoDB</prefix>
                  <color>yellow</color>
                </log>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>sk.spot.sandbox.dropwizard.SandboxApplication</mainClass>
          <commandlineArgs>-DdbHost=localhost</commandlineArgs>
          <arguments>
            <argument>server</argument>
            <argument>config.yml</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-bom</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <properties>
    <lucene.version>4.7.1</lucene.version>
    <docker.host.address>192.168.99.100</docker.host.address>
    <oak.version>1.5.0</oak.version>
    <admin.port>8081</admin.port>
    <mongodb.version>3.2.2</mongodb.version>
    <maven.compiler.target>1.8</maven.compiler.target>
    <dropwizard.version>0.9.2</dropwizard.version>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <web.port>8080</web.port>
    <docker.registry.name>localhost:5000/</docker.registry.name>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <docker.repository.name>${docker.registry.name}marek/${project.artifactId}</docker.repository.name>
    <javax.jcr.version>2.0</javax.jcr.version>
    <maven.compiler.source>1.8</maven.compiler.source>
  </properties>
</project>

